[tool.poetry]
name = "{{ cookiecutter.project_slug }}-backend"
version = "0.1.0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.11"
uvicorn = "^0.23.2"
pydantic = "^2.10.6"
requests = "^2.31.0"
alembic = "^1.15.1"
psycopg2-binary = "^2.9.10"
asyncpg = "^0.30.0"
SQLAlchemy = "^2.0.39"
gunicorn = "^21.2.0"
fastapi-users = {extras = ["sqlalchemy"], version = "^14.0.1"}
email-validator = "^2.2.0"
pydantic-settings = "^2.8.1"

[tool.poetry.group.dev.dependencies]
black = "^23.10.1"
pytest = "^7.4.3"
ipython = "^8.16.1"
pytest-cov = "^4.1.0"
httpx = "^0.24.1"
pytest-asyncio = "^0.21.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.cruft]
skip = [".env"]

[tool.pytest.ini_options]
asyncio_mode = 'auto'

[tool.ruff]
target-version = "py313"
line-length = 88

select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "F401",  # imported but unused, too annoyiong for my liking
]
